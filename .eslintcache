[{"/Users/atia/Documents/dropdownmenu/src/App.js":"1","/Users/atia/Documents/dropdownmenu/src/DropDownCustom.js":"2","/Users/atia/Documents/dropdownmenu/src/index.js":"3","/Users/atia/Documents/dropdownmenu/src/components/imageUpload.js":"4"},{"size":2659,"mtime":1606636682527,"results":"5","hashOfConfig":"6"},{"size":2459,"mtime":1606503668433,"results":"7","hashOfConfig":"6"},{"size":500,"mtime":1606485440685,"results":"8","hashOfConfig":"6"},{"size":1268,"mtime":1606637973319,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1kb4xyd",{"filePath":"12","messages":"13","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"14"},{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"17","messages":"18","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/atia/Documents/dropdownmenu/src/App.js",["19","20","21","22"],"/Users/atia/Documents/dropdownmenu/src/DropDownCustom.js",["23","24","25","26","27","28","29","30","31"],"import React,{useEffect,useState} from 'react'\nimport FontAwesome from 'react-fontawesome';\nimport './styles/global.sass'\n\nexport default function DropDownCustom(props) {\n    const list=props.list\n    const [location,setLocation]=useState(props.list)\n    const [listOpen,setListOpen]=useState(false)\n    const [nestlistOpen,setnestListOpen]=useState(false)\n    const [nestItem,setNestItem]=useState(React.createRef())\n    const [keyword,setkeyword]=useState('')\n    const [searchField,setSearchField]=useState( React.createRef())\n    const [searchNestField,setSearchNestField]=useState( React.createRef())\n    const [close,setClose]=useState(true)\n    const [headerTitle,setHeadeTitle]=useState(props.title)\n\n    const toggleItem=(id, key)=>{\n        let tempp = list[id]\n        setNestItem(tempp)\n        setnestListOpen(prevState => !prevState)\n        setkeyword('')\n        let temp = list[id]\n        temp.selected = !temp.selected\n        list[id]=temp\n      //  setHeadeTitle(list[id].value)\n        setLocation(temp.selected)\n        \n      }\n    const toggleNestItem=(id,opId)=>{\n      let temp = list[id].options[opId]\n      console.log(temp.value)\n      setHeadeTitle(temp.value)\n      setLocation(list[id].selected)\n    }\n   \n    const toggleList=() =>{\n        setListOpen(prevState => !prevState)\n        setkeyword('')\n       \n    }\n    return (\n        <div className=\"dd-wrapper\">\n        <div className=\"dd-header\" onClick={toggleList}>\n          <div className=\"dd-header-title\">{headerTitle}</div>\n          {listOpen\n          ? <FontAwesome name=\"angle-up\" size=\"2x\"/>\n          : <FontAwesome name=\"angle-down\" size=\"2x\"/>\n        }\n        </div>\n        {listOpen && <ul className=\"dd-list\">\n       {list.map((item) => (\n         <li className=\"dd-list-item\" key={item.id} \n         onClick={() =>toggleItem(item.id, item.key)}>\n                <div className=\"dd-header\">\n                <div className=\"dd-header-title\" >{item.value}</div>\n                    {nestlistOpen && nestItem.id===item.id?\n                    <ul className=\"dd-list\">\n                        \n                        {nestItem.options.map(ite=>\n                            <li key={ite.id} className=\"dd-list-item\" onClick={()=>toggleNestItem(item.id,ite.id)}>{ite.value}</li>\n                            )}\n                    </ul>\n                    :<ul></ul>}\n                </div>\n            </li>\n        ))}\n      </ul>}\n      </div>\n    )\n}\n\n","/Users/atia/Documents/dropdownmenu/src/index.js",[],"/Users/atia/Documents/dropdownmenu/src/components/imageUpload.js",["32"],{"ruleId":"33","severity":1,"message":"34","line":1,"column":8,"nodeType":"35","messageId":"36","endLine":1,"endColumn":12},{"ruleId":"33","severity":1,"message":"37","line":3,"column":8,"nodeType":"35","messageId":"36","endLine":3,"endColumn":22},{"ruleId":"33","severity":1,"message":"38","line":4,"column":10,"nodeType":"35","messageId":"36","endLine":4,"endColumn":19},{"ruleId":"33","severity":1,"message":"39","line":10,"column":9,"nodeType":"35","messageId":"36","endLine":10,"endColumn":13},{"ruleId":"33","severity":1,"message":"38","line":1,"column":15,"nodeType":"35","messageId":"36","endLine":1,"endColumn":24},{"ruleId":"33","severity":1,"message":"40","line":7,"column":12,"nodeType":"35","messageId":"36","endLine":7,"endColumn":20},{"ruleId":"33","severity":1,"message":"41","line":11,"column":12,"nodeType":"35","messageId":"36","endLine":11,"endColumn":19},{"ruleId":"33","severity":1,"message":"42","line":12,"column":12,"nodeType":"35","messageId":"36","endLine":12,"endColumn":23},{"ruleId":"33","severity":1,"message":"43","line":12,"column":24,"nodeType":"35","messageId":"36","endLine":12,"endColumn":38},{"ruleId":"33","severity":1,"message":"44","line":13,"column":12,"nodeType":"35","messageId":"36","endLine":13,"endColumn":27},{"ruleId":"33","severity":1,"message":"45","line":13,"column":28,"nodeType":"35","messageId":"36","endLine":13,"endColumn":46},{"ruleId":"33","severity":1,"message":"46","line":14,"column":12,"nodeType":"35","messageId":"36","endLine":14,"endColumn":17},{"ruleId":"33","severity":1,"message":"47","line":14,"column":18,"nodeType":"35","messageId":"36","endLine":14,"endColumn":26},{"ruleId":"48","severity":1,"message":"49","line":37,"column":17,"nodeType":"50","endLine":37,"endColumn":70},"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'DropDownCustom' is defined but never used.","'useEffect' is defined but never used.","'list' is assigned a value but never used.","'location' is assigned a value but never used.","'keyword' is assigned a value but never used.","'searchField' is assigned a value but never used.","'setSearchField' is assigned a value but never used.","'searchNestField' is assigned a value but never used.","'setSearchNestField' is assigned a value but never used.","'close' is assigned a value but never used.","'setClose' is assigned a value but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You donâ€™t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement"]